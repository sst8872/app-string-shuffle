{"version":3,"sources":["js/spreadSheet.js","js/exportContentToWord.js","js/app.js"],"names":["getSheetLength","cb","fetch","then","res","json","catch","e","console","log","Export2Doc","element","filename","html","document","getElementById","innerHTML","blob","Blob","type","url","encodeURIComponent","downloadLink","createElement","body","appendChild","navigator","msSaveOrOpenBlob","href","download","click","removeChild","myData","init","addEventListener","makeSentence","text","preventDefault","value","strValue","split","result","strArr","style","color","textContent","setTimeout","shuffStr","button","select","makeFile","data","link","URL","createObjectURL","classList","remove","execCommand","copied","marginBottom","disabled","handleString","arr","map","str","shuffle","join","replace","toLowerCase","n","i","length","j","Math","floor","random","tmp","loadJSON","len","id","urls","sheetNum","jsonURL","Promise","all","tempArr","sheetName","feed","title","$t","entry","forEach","holder","key","substring","ko","en","querySelectorAll","makeChoice","dataset","makeWordContent","num","tempData","exportContent","sentence","$","ready","focus","autosize"],"mappings":"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","file":"app.34135ac6.js","sourceRoot":"..","sourcesContent":["function getSheetLength(cb) {\r\n    let appURL = 'https://script.google.com/macros/s/AKfycbzPEv6fWhImZlfEBeuc15Zaq1RapOO_FmtT8_N7bWLiiN_SOoE/exec';\r\n    fetch(appURL)\r\n        .then(res => res.json())\r\n        .then(cb)\r\n        .catch(e => console.log(e));\r\n};\r\n\r\nexport default getSheetLength;\r\n\r\n\r\n\r\n// function doGet() {\r\n//\r\n//     var ss = SpreadsheetApp.getActiveSpreadsheet();\r\n//     var sheetLen = ss.getSheets().length;\r\n//     var jsonData = JSON.stringify(sheetLen);\r\n//\r\n//     return ContentService.createTextOutput(jsonData).setMimeType(ContentService.MimeType.JSON);\r\n// }\r\n","function Export2Doc(element, filename = ''){\r\n    var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\r\n    var postHtml = \"</body></html>\";\r\n    var html = preHtml+document.getElementById(element).innerHTML+postHtml;\r\n\r\n    var blob = new Blob(['\\ufeff', html], {\r\n        type: 'application/msword'\r\n    });\r\n\r\n    // Specify link url\r\n    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);\r\n\r\n    // Specify file name\r\n    filename = filename?filename+'.doc':'document.doc';\r\n\r\n    // Create download link element\r\n    var downloadLink = document.createElement(\"a\");\r\n\r\n    document.body.appendChild(downloadLink);\r\n\r\n    if(navigator.msSaveOrOpenBlob ){\r\n        navigator.msSaveOrOpenBlob(blob, filename);\r\n    }else{\r\n        // Create a link to the file\r\n        downloadLink.href = url;\r\n\r\n        // Setting the file name\r\n        downloadLink.download = filename;\r\n\r\n        //triggering the function\r\n        downloadLink.click();\r\n    }\r\n\r\n    document.body.removeChild(downloadLink);\r\n}\r\n\r\nexport default Export2Doc;\r\n","let myData = [];\r\nimport getSheetLength from \"./spreadSheet\";\r\nimport Export2Doc from \"./exportContentToWord\";\r\n\r\n$(document).ready(function(){\r\n    $('#title').focus();\r\n    $('#text').autosize();\r\n    init();\r\n    getSheetLength(loadJSON)\r\n});\r\n\r\nfunction init() {\r\n    const myForm = document.getElementById('paper');\r\n    myForm.addEventListener('submit', makeSentence)\r\n\r\n    function makeSentence(e) {\r\n        e.preventDefault();\r\n        if (text.value != '') {\r\n            var strValue = text.value.split('\\n');\r\n            var result = handleString(strValue);\r\n            console.log(result);\r\n            text.value = result;\r\n            text.style.color = 'green';\r\n            copyToClipboard();\r\n        } else {\r\n            text.style.color = 'red';\r\n            text.value = 'You should enter a sentence.';\r\n            button.disabled = true;\r\n            setTimeout(() => {\r\n                text.value = '';\r\n                button.disabled = false;\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    function copyToClipboard() {\r\n        button.value = 'Copy to Clipboard';\r\n        text.select();\r\n\r\n        makeFile(text.value);\r\n\r\n        button.addEventListener('click', function (e) {\r\n            document.execCommand('copy');\r\n            // makeFile(text.value);\r\n            copied.style.color = '#6697ea';\r\n            copied.style.marginBottom = '10px';\r\n            copied.textContent = 'Copied Successfully!';\r\n        });\r\n    }\r\n\r\n    function makeFile(data) {\r\n        console.log('song');\r\n        let blob = new Blob([data], { type: 'text/plain' });\r\n        link.href = URL.createObjectURL(blob);\r\n        link.classList.remove('hide');\r\n        // URL.revokeObjectURL(link.href);\r\n    }\r\n\r\n    function handleString(strArr) {\r\n        if (strArr[0] == \"\") {\r\n            text.style.color = \"red\";\r\n            text.textContent = \"You should enter a sentence.\";\r\n            // Reset the text field\r\n            setTimeout(() => {\r\n                text.style.color = \"black\";\r\n                text.textContent = \"\";\r\n            }, 2000);\r\n            return;\r\n        } else {\r\n            return shuffStr(strArr);\r\n        }\r\n    }\r\n}\r\n\r\nfunction shuffStr(arr) {\r\n    var res = arr.map(str => str.split(\" \"))\r\n        .map(shuffle)\r\n        .map(arr => arr.join(' '))\r\n        .map(str => str.replace(/\\.|\\?|!|,/g, ''))\r\n        .map(str => {\r\n            return str.toLowerCase()\r\n                .split(' ')\r\n                .join(', ');\r\n        })\r\n        .join('.\\n');\r\n\r\n    return res + '.';\r\n}\r\n\r\nfunction shuffle (arr) {\r\n    var n = arr.length;\r\n\r\n    for(var i = n - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var tmp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = tmp;\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction loadJSON(len) {\r\n    let id = \"1jlOs08Z4Qt2sJwBK2eXRS8YdTiSPfgCXnFc107UY1g8\";\r\n    let urls = [];\r\n    for (let sheetNum = 1; sheetNum <= len; sheetNum++) {\r\n        let jsonURL = `https://spreadsheets.google.com/feeds/list/${id}/${sheetNum}/public/values?alt=json`;\r\n        urls = [...urls, jsonURL];\r\n    }\r\n\r\n    Promise.all(\r\n        urls.map(url => {\r\n            return fetch(url)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    let tempArr = [];\r\n                    let sheetName = data.feed.title.$t;\r\n                    data.feed.entry.forEach(element => {\r\n                        let holder = {};\r\n                        for (let key in element) {\r\n                            if (key.substring(4) === 'korean') {\r\n                                holder.ko = element[key].$t;\r\n                            } else if (key.substring(4) === 'sentence') {\r\n                                holder.en = element[key].$t;\r\n                            }\r\n                        }\r\n                        tempArr = [...tempArr, holder];\r\n                    });\r\n                    return {\r\n                        key: sheetName,\r\n                        value: tempArr\r\n                    };\r\n                });\r\n        })).then(result => {\r\n            myData = result\r\n            const types = document.querySelectorAll('.sentence');\r\n            types.forEach(type => {\r\n                type.addEventListener('click', function (e) {\r\n                    makeChoice(this.dataset.value);\r\n                })\r\n            })\r\n    });\r\n}\r\n\r\nfunction makeChoice(value) {\r\n    switch (value) {\r\n        case '1' :\r\n            makeWordContent(1)\r\n            break;\r\n        case '2' :\r\n            makeWordContent(2)\r\n            break;\r\n        case '3' :\r\n            makeWordContent(3)\r\n            break;\r\n        case '4' :\r\n            makeWordContent(4)\r\n            break;\r\n        case '5' :\r\n            makeWordContent(5)\r\n            break;\r\n    }\r\n}\r\n\r\nfunction makeWordContent(num) {\r\n    let tempData = myData[num-1].value;\r\n    exportContent.innerHTML = '';\r\n    tempData.forEach(sentence => console.log(sentence.en));\r\n\r\n    tempData.forEach(sentence => {\r\n        exportContent.innerHTML += sentence.en + '<br>';\r\n    });\r\n\r\n    Export2Doc('exportContent', num + ' 형식');\r\n}\r\n"]}